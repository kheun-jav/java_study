package java_teamprojectY;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;

@@ -19,14 +20,13 @@ import java.util.List;
import java.util.Map;
import java.util.Scanner;


public class calendar {
	static Map<String, ArrayList<Event>> manager = new HashMap<>();
	static ArrayList<Event> list = new ArrayList<Event>();
	static Scanner scan  = new Scanner(System.in);
	static String userid;
	static boolean isEvent;
	static int event_cnt = 0;
	static Scanner scan  = new Scanner(System.in);
	static SimpleDateFormat sf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
	static final String FILE_NAME = "events.ser";
public static void main(String[] args) throws IOException, ParseException, ClassNotFoundException {
		Scanner scan = new Scanner(System.in);
		System.out.print("사용자 아이디를 입력하세요 >>");


@@ -87,25 +87,33 @@ public static void main(String[] args) throws IOException, ParseException, Class
                System.out.println(event);
            }
        }
		event_cnt++;
	}

	private static void findcal() throws IOException, ParseException {
		Scanner scan = new Scanner(System.in);
		int[] cntd = new int[31];
		
		System.out.print("년도를 입력하세요 =>");
		int year = scan.nextInt();
		System.out.print("월을 입력하세요 =>");
		int mon = scan.nextInt();
		String sday = manager.get(userid).get(event_cnt-1).feventdate;
		Date startday = null;
		SimpleDateFormat sf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		startday = sf.parse(sday);
		System.out.println(startday); // 시작날짜를 Date 형 자료로 변환
		Calendar cal = Calendar.getInstance();

		for (Event l : list) {
			Date d = sf.parse(l.feventdate);
			cal.setTime(d);
			if(year == cal.get(Calendar.YEAR) && mon == cal.get(Calendar.MONTH)+1) {
				for(int i = 0; i < cntd.length; i++) {
					if (cal.get(Calendar.DAY_OF_MONTH)-1 == i) {
						cntd[i]++;
					}
				}
			}
        }
		
		SimpleDateFormat sf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		cal.set(year,mon-1,1);
		int firstWeek = cal.get(Calendar.DAY_OF_WEEK);
		int lastday = cal.getActualMaximum(Calendar.DATE);
		cal.setTime(startday); // 이벤트 날짜를 Cal 형으로 변환
		FileOutputStream fos = new FileOutputStream(userid+".txt"); //userid.txt 스트림 오픈
		PrintStream ps = new PrintStream(fos); // 프린트 스트림 오픈
	    System.out.printf("\n\t\t%4d년 %2d월\n", year, mon);

@@ -114,20 +122,49 @@ public static void main(String[] args) throws IOException, ParseException, Class
	    System.out.println("============================================");

	    // 날짜 출력
	    for (int i = 1, day = 1; day <= lastday; i++) {
	    for (int i = 0, day = 1; day <= lastday; i++) {
	    	
	        if (i < firstWeek) {
	            System.out.printf("%-7s", ""); // 빈칸 출력 (한 칸당 7자리)
	        } else {
	            if (cal.get(Calendar.YEAR) == year && cal.get(Calendar.MONTH) == mon - 1 && cal.get(Calendar.DATE) == day) {
	                System.out.printf("%d(%d)%-2s", day++, event_cnt,""); // 일정 있는 날짜
	            if (cntd[day-1] > 0) {
	                System.out.printf("%d(%d)%-2s", day, cntd[day-1],""); // 일정 있는 날짜
	                
	            } else {
	                System.out.printf("%-7d", day++); // 일반 날짜
	                System.out.printf("%-7d", day); // 일반 날짜
	            }
	            day++;
	        }
	        if (i % 7 == 0) System.out.println(); // 한 줄(일주일) 출력 후 줄바꿈
	    }
	    System.out.println("\n============================================");
	}
	

	private static void setTime(Date d) {
		// TODO Auto-generated method stub
		
	}
	private static void saveEvents() {
		// ObjectOutputStream : 객체를 직렬화 하여 String > byte 형식으로 변환해서 파일에
		// 저장(FileOutputStream)
		try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(FILE_NAME))) {
			oos.writeObject(manager); // 이벤트 정보를 파일에 저장
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	// 이밴트 불러오기 (파일 역직렬화)
	private static void loadEvents() {
		File file = new File(FILE_NAME);
		// exists() : 존재여부
		if (!file.exists())
			return;
		try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file))) {
			// byte -> String 형변환 화면표출가능
			manager = (Map<String, ArrayList<Event>>) ois.readObject();
		} catch (IOException | ClassNotFoundException e) {
			e.printStackTrace();
		}
	}
}